package UniStudy.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SProperty;

public class Career_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.indent();
    tgs.append("<li><h3>Transcript #" + (SNodeOperations.getIndexInParent(ctx.getPrimaryInput()) + 1) + " for " + SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.degree_course$_Nll), PROPS.name$MnvL) + " (" + SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.degree_course$_Nll), PROPS.reference_year$9QcO) + ")</h3>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<table class=\"table table-bordered w-auto\" style=\"border-color:black;\">");
    tgs.newLine();
    tgs.increaseIndent();
    tgs.indent();
    tgs.append("<thead>");
    tgs.newLine();
    tgs.increaseIndent();
    tgs.indent();
    tgs.append("<tr>");
    tgs.newLine();
    tgs.increaseIndent();
    tgs.indent();
    tgs.append("<th>");
    tgs.append("Course");
    tgs.append("</th>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<th>");
    tgs.append("Year");
    tgs.append("</th>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<th>");
    tgs.append("CFU");
    tgs.append("</th>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<th>");
    tgs.append("Grade & call date");
    tgs.append("</th>");
    tgs.newLine();
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("</tr>");
    tgs.newLine();
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("</thead>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<tbody>");
    tgs.newLine();
    tgs.increaseIndent();
    for (SNode item : SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.courses$_MCi)) {
      tgs.appendNode(item);
    }
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("</tbody>");
    tgs.newLine();
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("</table>");
    tgs.newLine();
    tgs.indent();
    tgs.append("</li>");
    tgs.newLine();

  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink degree_course$_Nll = MetaAdapterFactory.getReferenceLink(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x13cf5a8b21e5c404L, 0x13cf5a8b21e5c40fL, "degree_course");
    /*package*/ static final SContainmentLink courses$_MCi = MetaAdapterFactory.getContainmentLink(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x13cf5a8b21e5c404L, 0x13cf5a8b21e5c40cL, "courses");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty reference_year$9QcO = MetaAdapterFactory.getProperty(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x78359f29b5c5d024L, 0x13cf5a8b21e5c435L, "reference_year");
  }
}
