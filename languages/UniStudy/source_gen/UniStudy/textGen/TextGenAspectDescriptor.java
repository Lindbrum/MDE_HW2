package UniStudy.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenAspectBase;
import UniStudy.structure.LanguageConceptSwitch;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.text.rt.TextGenDescriptor;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.text.rt.TextGenModelOutline;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class TextGenAspectDescriptor extends TextGenAspectBase {
  private final LanguageConceptSwitch myIndex = new LanguageConceptSwitch();

  public TextGenAspectDescriptor() {
  }

  @Nullable
  @Override
  public TextGenDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    switch (myIndex.index(concept)) {
      case LanguageConceptSwitch.CareerManagement:
        return new CareerManagement_TextGen();
      case LanguageConceptSwitch.Department:
        return new Department_TextGen();
      case LanguageConceptSwitch.University:
        return new University_TextGen();
    }
    return null;
  }

  @Override
  public void breakdownToUnits(@NotNull TextGenModelOutline outline) {
    for (SNode root : outline.getModel().getRootNodes()) {
      if (root.getConcept().equals(CONCEPTS.CareerManagement$$r)) {
        String fname = getFileName_CareerManagement(root);
        String ext = getFileExtension_CareerManagement(root);
        outline.registerTextUnit((ext == null ? fname : (fname + '.' + ext)), root);
        continue;
      }
    }
  }
  private static String getFileName_CareerManagement(SNode node) {
    return node.getName();
  }
  private static String getFileExtension_CareerManagement(SNode node) {
    return "html";
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept CareerManagement$$r = MetaAdapterFactory.getConcept(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x3b69734a0801c738L, "UniStudy.structure.CareerManagement");
  }
}
