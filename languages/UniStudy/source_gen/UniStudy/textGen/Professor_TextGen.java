package UniStudy.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class Professor_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.indent();
    tgs.append("<h3>Professor #" + (SNodeOperations.getIndexInParent(ctx.getPrimaryInput()) + 1) + ": ");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL));
    tgs.append("</h3>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<ul>");
    tgs.newLine();
    tgs.increaseIndent();
    tgs.indent();
    tgs.append("<li>ORCID: ");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.orcid$nO6t));
    tgs.append("</li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<li>Email: ");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.email$lkws));
    tgs.append("</li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<li>Telephone: ");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.telephone_number$nN70));
    tgs.append("</li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<li>Office telephone: ");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.office_telephone$nTvO));
    tgs.append("</li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<h3>Courses held by this professor:</h3>");
    tgs.newLine();
    tgs.increaseIndent();
    tgs.indent();
    tgs.append("<ul>");
    tgs.newLine();
    for (SNode item : SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.taught_courses$v4bn)) {
      tgs.appendNode(item);
    }
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("</ul>");
    tgs.newLine();
    tgs.indent();
    tgs.append("</li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<h3>Supervised thesis:</h3>");
    tgs.newLine();
    if (ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.thesis_supervised$v57r)).count() == 0) {
      tgs.indent();
      tgs.append("No thesis yet");
      tgs.newLine();
    } else {
      tgs.increaseIndent();
      tgs.indent();
      tgs.append("<ul>");
      tgs.newLine();
      for (SNode item : SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.thesis_supervised$v57r)) {
        tgs.appendNode(item);
      }
      tgs.decreaseIndent();
      tgs.indent();
      tgs.append("</ul>");
      tgs.newLine();
    }
    tgs.indent();
    tgs.append("</li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<h3>Coordinated courses:</h3>");
    tgs.newLine();
    if (ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.coordinated_degree_courses$vbdP)).count() == 0) {
      tgs.indent();
      tgs.append("No coordinated course");
      tgs.newLine();
    } else {
      tgs.increaseIndent();
      tgs.indent();
      tgs.append("<ul>");
      tgs.newLine();
      for (SNode item : SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.coordinated_degree_courses$vbdP)) {
        tgs.appendNode(item);
      }
      tgs.decreaseIndent();
      tgs.indent();
      tgs.append("</ul>");
      tgs.newLine();
    }
    tgs.indent();
    tgs.append("</li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<h3>News posted by this professor:</h3>");
    tgs.newLine();
    if (ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.posted_news$vcBV)).count() == 0) {
      tgs.indent();
      tgs.append("No posted news yet");
      tgs.newLine();
    } else {
      tgs.increaseIndent();
      tgs.indent();
      tgs.append("<ul>");
      tgs.newLine();
      for (SNode item : SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.posted_news$vcBV)) {
        tgs.appendNode(item);
      }
      tgs.decreaseIndent();
      tgs.indent();
      tgs.append("</ul>");
      tgs.newLine();
    }
    tgs.indent();
    tgs.append("</li>");
    tgs.newLine();
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("</ul>");
    tgs.newLine();
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty orcid$nO6t = MetaAdapterFactory.getProperty(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x78359f29b5c5cfc9L, 0x78359f29b5c5cfdcL, "orcid");
    /*package*/ static final SProperty email$lkws = MetaAdapterFactory.getProperty(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x78359f29b5c5cfccL, 0x78359f29b5c5cfd3L, "email");
    /*package*/ static final SProperty telephone_number$nN70 = MetaAdapterFactory.getProperty(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x78359f29b5c5cfccL, 0x78359f29b5c5cfd7L, "telephone_number");
    /*package*/ static final SProperty office_telephone$nTvO = MetaAdapterFactory.getProperty(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x78359f29b5c5cfc9L, 0x78359f29b5c5cfdeL, "office_telephone");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink taught_courses$v4bn = MetaAdapterFactory.getContainmentLink(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x78359f29b5c5cfc9L, 0x78359f29b5c5d0b2L, "taught_courses");
    /*package*/ static final SContainmentLink thesis_supervised$v57r = MetaAdapterFactory.getContainmentLink(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x78359f29b5c5cfc9L, 0x78359f29b5c5d0b6L, "thesis_supervised");
    /*package*/ static final SContainmentLink coordinated_degree_courses$vbdP = MetaAdapterFactory.getContainmentLink(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x78359f29b5c5cfc9L, 0x78359f29b5c5d0bbL, "coordinated_degree_courses");
    /*package*/ static final SContainmentLink posted_news$vcBV = MetaAdapterFactory.getContainmentLink(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x78359f29b5c5cfc9L, 0x78359f29b5c5d0c1L, "posted_news");
  }
}
