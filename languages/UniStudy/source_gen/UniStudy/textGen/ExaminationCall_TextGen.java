package UniStudy.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class ExaminationCall_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.indent();
    tgs.append("<li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<h3>Call #" + (SNodeOperations.getIndexInParent(ctx.getPrimaryInput()) + 1) + "</h3>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<ul>");
    tgs.newLine();
    tgs.increaseIndent();
    tgs.indent();
    tgs.append("<li>Call date: ");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.date$MUDv));
    tgs.append("</li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<li>Classroom: ");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.classroom$MV7x));
    tgs.append("</li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<li>Exam type: ");
    tgs.append("" + SPropertyOperations.getEnum(ctx.getPrimaryInput(), PROPS.exam_type$N0JT));
    tgs.append("</li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<li>Description: ");
    tgs.newLine();
    tgs.append("<p>");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.description$Tf$2));
    tgs.append("</p>");
    tgs.newLine();
    tgs.append("</li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<li>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<h3>Booked students:</h3>");
    tgs.newLine();
    tgs.indent();
    tgs.append("<ul>");
    tgs.newLine();
    tgs.increaseIndent();
    for (SNode item : SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.booked_students$C1Ek)) {
      tgs.appendNode(item);
    }
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("</ul>");
    tgs.newLine();
    tgs.indent();
    tgs.append("</li>");
    tgs.newLine();
    tgs.decreaseIndent();
    tgs.indent();
    tgs.append("</ul>");
    tgs.newLine();

  }

  private static final class PROPS {
    /*package*/ static final SProperty date$MUDv = MetaAdapterFactory.getProperty(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x78359f29b5c57a20L, 0x78359f29b5c5cf75L, "date");
    /*package*/ static final SProperty classroom$MV7x = MetaAdapterFactory.getProperty(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x78359f29b5c57a20L, 0x78359f29b5c5cf77L, "classroom");
    /*package*/ static final SProperty exam_type$N0JT = MetaAdapterFactory.getProperty(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x78359f29b5c57a20L, 0x78359f29b5c5cf7aL, "exam_type");
    /*package*/ static final SProperty description$Tf$2 = MetaAdapterFactory.getProperty(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x78359f29b5c57a20L, 0xc081217450dda00L, "description");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink booked_students$C1Ek = MetaAdapterFactory.getContainmentLink(0x6d0cfce3b6ce4188L, 0xa63493977a58376fL, 0x78359f29b5c57a20L, 0x13cf5a8b21e5c416L, "booked_students");
  }
}
